name: "Request for Quote or Purchase (RFQ|RFP) from suspicious sender"
description: |
  RFQ/RFP scams involve fraudulent emails posing as legitimate requests for quotations or purchases, often sent by scammers impersonating reputable organizations.
  These scams aim to deceive recipients into providing sensitive information or conducting unauthorized transactions, often leading to financial loss, or data leakage.
type: "rule"
severity: "medium"
source: "type.inbound \nand 1 of (\n    (\n        (\n            length(recipients.to) == 0 or \n            all(recipients.to, .display_name == \"Undisclosed recipients\")\n        )\n        and length(recipients.cc) == 0\n        and length(recipients.bcc) == 0\n    ),\n    (\n        strings.istarts_with(subject.subject, \"RE:\")\n        and (length(headers.references) == 0\n        or not any(headers.hops, any(.fields, strings.ilike(.name, \"In-Reply-To\"))))\n    ),\n    (\n        (\n            sender.email.domain.root_domain in $free_email_providers\n            and sender.email.email not in $recipient_emails\n        )\n        or \n        (\n            sender.email.domain.root_domain not in $free_email_providers\n            and sender.email.domain.domain not in $recipient_domains\n        )\n    )\n)\n\nand 2 of (\n    (\n        regex.icontains(coalesce(body.html.display_text, body.plain.raw), '(discuss.{0,15}purchas(e|ing))')\n    ),\n    (\n        regex.icontains(coalesce(body.html.display_text, body.plain.raw), '(sign(ed?)|view).{0,10}(purchase order)|Request for a Quot(e|ation)')\n    ),\n    (\n        regex.icontains(coalesce(body.html.display_text, body.plain.raw), '(please|kindly).{0,30}quote')\n    ),\n    (\n        regex.icontains(subject.subject, '(request for (purchase|quot(e|ation))|\\bRFQ\\b|\\bRFP\\b)')\n    ),\n    (\n        any(attachments, regex.icontains(.file_name, \"(purchase.?order|Quot(e|ation))\"))\n    ),\n    (\n        any(ml.nlu_classifier(coalesce(\n            body.html.display_text, body.plain.raw)).entities, .name == \"request\") \n        and \n        any(ml.nlu_classifier(coalesce(\n            body.html.display_text, body.plain.raw)).entities,.name == \"urgency\")\n    ),\n    (\n        any(ml.nlu_classifier(coalesce(\n            body.html.display_text, body.plain.raw)).tags,.name == \"purchase_order\" and .confidence == \"high\")\n    )\n)\n"
tags:
  - "Suspicious sender"
  - "Fraud"
  - "RFQ"
  - "RFP"
  - "Natural Language Understanding"
testing_pr: 507
testing_sha: 5b5c16b1bb12ffa81547dde60e79f4a7716bb453
