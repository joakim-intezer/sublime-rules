name: "Suspicious sender name and content"
description: |
  Sender display name contains unusual characters, and message content flags NLU.
type: "rule"
severity: "medium"
source: "type.inbound\nand regex.contains(sender.display_name, '(=?UTF-8?|[%!#*/\\\\;])')\nand (\n    any(ml.nlu_classifier(\n            coalesce(body.html.display_text, body.plain.raw)).intents, .name != \"benign\")\n    or any(ml.nlu_classifier(\n            coalesce(body.html.display_text, body.plain.raw)).entities, .name == \"financial\")\n    or any(ml.nlu_classifier(\n            coalesce(body.html.display_text, body.plain.raw)).entities, .name == \"urgency\")\n    or any(ml.nlu_classifier(\n            coalesce(body.html.display_text, body.plain.raw)).entities, .name == \"request\")\n    or any(attachments, \n        any(file.explode(.), \n            any(ml.nlu_classifier(.scan.ocr.raw).intents, .name != \"benign\")\n            or any(ml.nlu_classifier(.scan.ocr.raw).entities, .name == \"financial\")\n            or any(ml.nlu_classifier(.scan.ocr.raw).entities, .name == \"urgency\")\n            or any(ml.nlu_classifier(.scan.ocr.raw).entities, .name == \"request\")\n        )\n    )\n    or any(attachments,\n      .file_type in ('png', 'jpeg', 'jpg', 'bmp', 'pdf')\n      and beta.logo_detect(.).brand.name is not null\n    )\n)\n"
tags:
  - "Suspicious sender"
  - "Suspicious content"
  - "Natural Language Understanding"
testing_pr: 477
testing_sha: 594d08dda42c39f234b05bd63e0bbe43655e20c9
