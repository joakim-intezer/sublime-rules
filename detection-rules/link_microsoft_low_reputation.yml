name: "Brand impersonation: Microsoft with low reputation links"
description: "Detects low reputation links with Microsoft specific indicators in the body."
type: "rule"
severity: "medium"
source: "type.inbound\n// suspicious link\nand any(body.links,\n    (\n        .href_url.domain.domain not in $tranco_1m or\n        .href_url.domain.domain in $free_file_hosts or\n        .href_url.domain.root_domain in $free_subdomain_hosts or\n        .href_url.domain.domain in $url_shorteners or\n\n        // mass mailer link, masks the actual URL\n        .href_url.domain.root_domain in (\n            \"hubspotlinks.com\",\n            \"mandrillapp.com\",\n            \"sendgrid.net\",\n        )\n    )\n    \n    // exclude sources of potential FPs\n    and .href_url.domain.root_domain not in (\"svc.ms\", \"sharepoint.com\")\n)\n\n// not a reply\nand (\n    length(headers.references) == 0\n    or not any(headers.hops, any(.fields, strings.ilike(.name, \"In-Reply-To\")))\n)\n\n// Microsoft logo\nand any(attachments,\n    .file_type in ('png', 'jpeg', 'jpg', 'bmp')\n    and beta.logo_detect(.).brand.name in (\"Microsoft\", \"Office365\", \"Outlook\")\n)\n\n// suspicious content\nand (\n    (\n        strings.ilike(body.plain.raw, \"*password*\", \"*document*\", \"*voicemail*\", \"*cache*\", \"*fax*\", \"*storage*\", \"*quota*\")\n        and strings.ilike(body.plain.raw, \"*terminated*\", \"*review*\", \"*expire*\", \"*click*\", \"*view*\", \"*exceed*\", \"*clear*\", \"*only works*\")\n    )\n    or (\n        any(attachments,\n        .file_type in ('png', 'jpeg', 'jpg', 'bmp')\n        and any(file.explode(.),\n            strings.ilike(.scan.ocr.raw, \"*password*\", \"*document*\", \"*voicemail*\", \"*cache*\", \"*fax*\", \"*storage*\", \"*quota*\")\n            and strings.ilike(.scan.ocr.raw, \"*terminated*\", \"*review*\", \"*expire*\", \"*click*\", \"*view*\", \"*exceed*\", \"*clear*\", \"*only works*\")\n            )\n        )\n    )\n)\n\nand (\n    any(ml.nlu_classifier(body.html.inner_text).intents,\n        .name == \"cred_theft\"\n    )\n\n    or any(attachments,\n        .file_type in ('png', 'jpeg', 'jpg', 'bmp')\n        and any(file.explode(.),\n            any(ml.nlu_classifier(.scan.ocr.raw).intents,\n                .name == \"cred_theft\"\n            )\n        )\n    )\n\n    or any(ml.nlu_classifier(body.html.inner_text).entities,\n        .name == \"urgency\"\n    )\n)\n\nand sender.email.domain.root_domain not in $org_domains\n\nand sender.email.domain.root_domain not in (\n    \"bing.com\",\n    \"microsoft.com\",\n    \"microsoftonline.com\",\n    \"microsoftsupport.com\",\n    \"microsoft365.com\",\n    \"office.com\",\n    \"onedrive.com\",\n    \"sharepointonline.com\",\n    \"yammer.com\",\n)\n"
tags:
  - "Suspicious link"
  - "Brand impersonation"
  - "Computer Vision"
testing_pr: 505
testing_sha: 52ab077235987d1c7e80d1547569177d6c103dcb
