name: "Spam: Emoji Filter (Untrusted and Unsolicited Senders)"
description: "This rule detects emoji's in the subject or display name. Negating messages from highly trusted senders that do not fail authentication and are unsolicited. "
type: "rule"
severity: "low"
source: |
  type.inbound
  and any([subject.subject, sender.display_name],
          regex.contains(.,
                         '[\x{1F300}-\x{1F5FF}\x{1F600}-\x{1F64F}\x{1F680}-\x{1F6FF}\x{1F700}-\x{1F77F}\x{1F780}-\x{1F7FF}\x{1F900}-\x{1F9FF}\x{2600}-\x{26FF}\x{2700}-\x{27BF}\x{2300}-\x{23FF}]'
          )
  )

  // negate highly trusted sender domains unless they fail DMARC authentication
  and (
    (
      sender.email.domain.root_domain in $high_trust_sender_root_domains
      and (
        any(distinct(headers.hops, .authentication_results.dmarc is not null),
            strings.ilike(.authentication_results.dmarc, "*fail")
        )
      )
    )
    or sender.email.domain.root_domain not in $high_trust_sender_root_domains
  )
  and (
    not profile.by_sender().solicited
    or profile.by_sender().any_messages_malicious_or_spam
  )
attack_types:
  - "Spam"
detection_methods:
  - "Header analysis"
  - "Sender analysis"
id: "521a6014-7b05-5b4f-8bf5-3cd8e6e7e211"
testing_pr: 1201
testing_sha: 5b7d02fff01da918fd7f106ed4d3ce99991a77dc
