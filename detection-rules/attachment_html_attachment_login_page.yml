name: "Attachment: HTML Attachment with Login Portal Indicators"
description: |
  Recursively scans files and archives to detect indicators of login portals implemented in HTML files. This is a known credential theft technique used by threat actors.
references:
  - "https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/html-file-attachments-still-a-threat/"
  - "https://app.any.run/tasks/6bd34bda-91ef-4d13-847c-81d7787dc763/"
  - "https://playground.sublimesecurity.com?id=6cd813e4-085b-4229-ad15-d2194cdbb91b"
type: "rule"
severity: "medium"
authors:
  - twitter: "ajpc500"
source: "type.inbound\nand any(attachments,\n        (\n          .file_extension in~ (\"html\", \"htm\", \"shtml\", \"dhtml\")\n          or .file_extension in~ $file_extensions_common_archives\n          or .file_type == \"html\"\n        )\n        and any(file.explode(.),\n                // suspicious strings found in javascript\n                (\n                  length(filter(.scan.javascript.strings, strings.ilike(., \"*password*\", ))) >= 2\n                  and 2 of (\n                    any(.scan.javascript.strings, strings.ilike(., \"*incorrect*\")),\n                    any(.scan.javascript.strings, strings.ilike(., \"*invalid*\")),\n                    any(.scan.javascript.strings, strings.ilike(., \"*login*\")),\n                    any(.scan.javascript.strings, regex.icontains(., \"sign.in\")),\n                  )\n                )\n                or (\n                  // suspicious strings found outside of javascript, but binexplode'd file still of HTML type\n                  length(filter(.scan.strings.strings, strings.ilike(., \"*password*\", ))) >= 2\n                  and 2 of (\n                    any(.scan.strings.strings, strings.ilike(., \"*incorrect*\")),\n                    any(.scan.strings.strings, strings.ilike(., \"*invalid*\")),\n                    any(.scan.strings.strings, strings.ilike(., \"*login*\")),\n                    any(.scan.strings.strings, strings.ilike(., \"*<script>*\")),\n                    any(.scan.strings.strings, regex.icontains(., \"sign.in\")),\n                    any(.scan.strings.strings,\n                        regex.icontains(.,\n                                        '<title>.[^<]+(Payment|Invoice|Statement|Login|Microsoft|Email|Excel)'\n                        )\n                    )\n                  )\n                )\n                or \n                //Known phishing obfuscation\n                2 of (\n                  // Enter password\n                  any(.scan.strings.strings,\n                      strings.ilike(.,\n                                    \"*&#69;&#110;&#116;&#101;&#114;&#32;&#112;&#97;&#115;&#115;&#119;&#111;&#114;&#100*\"\n                      )\n                  ),\n\n                  // Forgotten my password  \n                  any(.scan.strings.strings,  \n                      strings.ilike(.,  \n                                    \"*&#70;&#111;&#114;&#103;&#111;&#116;&#116;&#101;&#110;&#32;&#109;&#121;&#32;&#112;&#97;&#115;&#115;&#119;&#111;&#114;&#100*\"\n                      )\n                  ),\n\n                  // Sign in\n                  any(.scan.strings.strings,\n                      strings.ilike(., \"*&#83;&#105;&#103;&#110;&#32;&#105;&#110*\")\n                  )\n                )\n        )\n)\n// Unsolicited\nand (\n  not profile.by_sender().solicited\n  or (\n    profile.by_sender().any_messages_malicious_or_spam\n    and not profile.by_sender().any_false_positives\n  )\n)\n"
attack_types:
  - "Credential Phishing"
tactics_and_techniques:
  - "HTML smuggling"
  - "Scripting"
detection_methods:
  - "Archive analysis"
  - "File analysis"
  - "HTML analysis"
  - "Javascript analysis"
  - "Sender analysis"
id: "3aabf4a7-fefa-5266-83fe-012002c9db4a"
testing_pr: 815
testing_sha: aed114f25899ab2d1ff2b5519c78aa177a48fa26
