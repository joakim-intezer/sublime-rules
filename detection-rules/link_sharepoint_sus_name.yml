name: "Link: Suspicious SharePoint Document Name"
description: "The detection rule is intended to match on emails sent from SharePoint indicating a shared file to the recipient that contain suspicious content within the document name.  The Link display text is leveraged to identify the name of the shared file."
type: "rule"
severity: "low"
source: "type.inbound\n\nand strings.icontains(subject.subject, \"shared\")\nand strings.ilike(body.current_thread.text,\n                  \"*shared a file with you*\",\n                  \"*shared with you*\",\n                  \"*invited you to access a file*\"\n)\nand any(body.links,\n        (\n\n          // file sharing service references\n          strings.icontains(.display_text, 'dropbox')\n          or strings.icontains(.display_text, 'docusign')\n\n          // file name lures\n          // secure theme\n          or regex.icontains(.display_text, 'secured?.*(?:file|document|docs|fax)')\n          or regex.icontains(.display_text, 'important.*(?:file|document|docs|fax)')\n          or regex.icontains(.display_text, 'shared?.*(?:file|document|docs|fax)')\n          or regex.icontains(.display_text, 'protected.*(?:file|document|docs|fax)')\n          or regex.icontains(.display_text, 'encrypted.*(?:file|document|docs|fax)')\n\n          // digits\n          or regex.icontains(.display_text, 'doc(?:ument)?\\s?\\d+$')\n          or regex.icontains(.display_text, '^\\d+$')\n          \n          // onedrive theme\n          or strings.icontains(.display_text, 'one_docx')\n          or strings.icontains(.display_text, 'OneDrive')\n          or regex.icontains(.display_text, 'A document.*One.?Drive')\n\n          // action in file name\n          or strings.icontains(.display_text, 'click here')\n          or strings.icontains(.display_text, 'Download PDF')\n          or strings.icontains(.display_text, 'Validate')\n          \n\n          // limited file name to \"confidential\"\n          or .display_text =~ 'Confidentiality'\n          or .display_text =~ 'Confidential'\n\n          // invoice themes\n          or strings.icontains(.display_text, 'payment')\n          or strings.icontains(.display_text, 'invoice')\n          or regex.icontains(.display_text, 'INV(?:_|\\s)?\\d+$')\n          // starts with INV_ or INV\\x20\n          or regex.icontains(.display_text, '^INV(?:_|\\s)?')\n          or regex.icontains(.display_text, 'PO(?:_|\\s)?\\d+$')\n          or strings.icontains(.display_text, 'receipt')\n          or strings.icontains(.display_text, 'billing')\n          or strings.icontains(.display_text, 'statement')\n          or strings.icontains(.display_text, 'Past Due')\n          or regex.icontains(.display_text, 'Remit(tance)?')\n          or strings.icontains(.display_text, 'Purchase Order')\n\n          // contract language\n          or strings.icontains(.display_text, 'settlement')\n          or strings.icontains(.display_text, 'contract agreement')\n          or strings.icontains(.display_text, 'Proposal')\n          or strings.icontains(.display_text, 'contract doc')\n        )\n        and .href_url.domain.root_domain == \"sharepoint.com\"\n)\n// and sender has never had email sent to them\nand not profile.by_sender().solicited\n"
attack_types:
  - "Credential Phishing"
tactics_and_techniques:
  - "Free file host"
  - "Evasion"
detection_methods:
  - "Content analysis"
id: "f95fee6e-8127-5888-a9a9-4bbeabfe33a3"
testing_pr: 1715
testing_sha: 7120c1109d486a59ce0716673a8789b4bb2e3e80
