name: "Credential Phishing: Docusign dummy PDF attachment(s)"
description: "This rule detects DocuSign impersonations with empty, or dummy pdf file attachments attempting to add validity. The message contains a link with suspicious display_text but does not link to a DocuSign domain."
type: "rule"
severity: "high"
source: "type.inbound\n\n// link boundary\nand length(filter(body.links, .href_url.domain.valid)) < 25\nand length(attachments) > 0\n\n// the pdf files are distractions, no links nor readable text is observed\nand all(attachments,\n        .file_type == \"pdf\"\n        and any(file.explode(.),\n                (\n                  length(.scan.url.urls) > 0\n                  or length(.scan.pdf.urls) > 0\n                  or length(body.links) > 0\n                )\n                and .scan.ocr.raw is null\n        )\n)\n\n// Screenshot indicates a docusign logo or docusign name with cta to documents\nand (\n  any(file.explode(beta.message_screenshot()),\n      (\n        strings.ilike(.scan.ocr.raw, \"*DocuSign*\")\n        or any(ml.logo_detect(beta.message_screenshot()).brands,\n               .name == \"DocuSign\"\n        )\n      )\n      and (\n        (\n          regex.icontains(.scan.ocr.raw,\n                          \"((re)?view|access|sign|complete(d)?) documen(t)?(s)?\",\n                          \"Your document has been completed\",\n                          \"New Document Shared with you\",\n                          \"Kindly click the link\",\n                          \"important edocs\",\n                          // German (Document (check|check|sign|sent))\n                          \"Dokument (überprüfen|prüfen|unterschreiben|geschickt)\",\n                          // German (important|urgent|immediate)\n                          \"(wichtig|dringend|sofort)\"\n          )\n          and any(body.links,\n                  not strings.ilike(.href_url.domain.root_domain, \"docusign.*\")\n                  and (.display_text is null and .display_url.url is null)\n          )\n        )\n        or any(body.links,\n               not strings.ilike(.href_url.domain.root_domain, \"docusign.*\")\n               and regex.icontains(.display_text,\n                                   '(\\bdocument|(view|get your) (docu|file))'\n               )\n        )\n      )\n  )\n)\n\n// links with null display_text that do not go to docusign.* (indicative of hyperlinked image) or the display text contains DOCUMENT \nand (\n  not profile.by_sender().solicited\n  or (\n    profile.by_sender().any_messages_malicious_or_spam\n    and not profile.by_sender().any_false_positives\n  )\n)\n// negate highly trusted sender domains unless they fail DMARC authentication\nand (\n  (\n    sender.email.domain.root_domain in $high_trust_sender_root_domains\n    and not headers.auth_summary.dmarc.pass\n  )\n  or sender.email.domain.root_domain not in $high_trust_sender_root_domains\n)\n\n// negate legit replies\nand not (\n  length(headers.references) > 0\n  or any(headers.hops, any(.fields, strings.ilike(.name, \"In-Reply-To\")))\n)\nand not profile.by_sender().any_false_positives\n\n// negate docusign X-Return-Path\nand not any(headers.hops,\n            .index == 0\n            and any(.fields,\n                    .name == \"X-Return-Path\"\n                    and strings.ends_with(.value, \"docusign.net\")\n            )\n)\n\n// negate \"via\" senders via dmarc authentication\nand (\n  not coalesce(headers.auth_summary.dmarc.pass\n               and strings.contains(sender.display_name, \"via\")\n               and sender.email.domain.domain in $org_domains,\n               false\n  )\n)\n"
attack_types:
  - "Credential Phishing"
tactics_and_techniques:
  - "Evasion"
  - "Impersonation: Brand"
  - "PDF"
  - "Social engineering"
detection_methods:
  - "Computer Vision"
  - "Content analysis"
  - "File analysis"
  - "Optical Character Recognition"
  - "Sender analysis"
id: "b162ceca-eddf-5d46-bd32-bfd04f5c133c"
testing_pr: 1780
testing_sha: d3d8cde5358bc5b0bac9009d839e92c62ffe9d8b
