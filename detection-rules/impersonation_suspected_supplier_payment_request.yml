name: "Impersonation: Suspected supplier impersonation "
description: "This rule detects supplier impersonation by checking for: similar but not identical linked domains to the sender, non-freemail senders using freemail infrastructure, sender domains less than 90 days old (via whois), unsolicited communication or no prior interaction with the reply-to address, and either payment interception language or a very short email body with only image attachments."
type: "rule"
severity: "high"
source: "type.inbound\n// a linked domain is similar but not the same as the sender domain\nand any(body.links,\n        0 < strings.levenshtein(.href_url.domain.sld, sender.email.domain.sld) <= 2\n)\n// the sender is not a freemail, but the message or the in-reply-to indicates it traversed a freemail infrastructure, likely an auto forwarding rule\nand (\n  sender.email.domain.root_domain not in $free_email_providers\n  and (\n    any(headers.references, any($free_email_providers, strings.contains(.., .)))\n    or any($free_email_providers, strings.contains(headers.in_reply_to, .))\n  )\n)\n// the sender domain is less than 90 days old and was not solicited, nor ever communicated with\nand (\n  beta.whois(sender.email.domain).days_old < 90\n  and (\n    not profile.by_sender_domain().solicited\n    or // reply-to is not in $recipient_emails\n any(headers.reply_to, .email.email not in $recipient_emails)\n  )\n)\nand (\n  2 of (\n    // language attempting to engage\n    (\n      any(ml.nlu_classifier(body.current_thread.text).entities,\n          .name == \"request\"\n      )\n      and any(ml.nlu_classifier(body.current_thread.text).entities,\n              .name == \"financial\"\n      )\n    ),\n    // payment tag high confidence \n    any(ml.nlu_classifier(body.current_thread.text).tags,\n        .name == \"payment\" and .confidence == \"high\"\n    ),\n    // invoicing language\n    any(ml.nlu_classifier(body.current_thread.text).tags, .name == \"invoice\"),\n\n    // urgency request\n    any(ml.nlu_classifier(body.current_thread.text).entities,\n        .name == \"urgency\"\n    )\n  )\n  or (\n    length(body.current_thread.text) < 300\n    and length(attachments) > 0\n    and all(attachments, (.file_type in $file_types_images))\n  )\n)\n"
attack_types:
  - "BEC/Fraud"
tactics_and_techniques:
  - "Evasion"
  - "Free email provider"
  - "Lookalike domain"
  - "Social engineering"
detection_methods:
  - "Content analysis"
  - "Header analysis"
  - "Natural Language Understanding"
  - "Sender analysis"
  - "URL analysis"
  - "Whois"
id: "63d8b1ce-7409-58d9-aa78-fffba12bba29"
testing_pr: 1262
testing_sha: 721d2ad6c8d1504c25f8a151602772e885cb2fd5
