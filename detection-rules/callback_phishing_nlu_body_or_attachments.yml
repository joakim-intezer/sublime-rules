name: "Callback Phishing NLU body or attachment from first-time sender"
description: |
  Detects callback scams by analyzing text within images of receipts or invoices from first time senders.
type: "rule"
severity: "medium"
source: |
  type.inbound
  and (
    length(attachments) <= 3
    and (
      any(attachments,
          .file_type in $file_types_images
          and any(file.explode(.),
                  .scan.qr.type is not null
                  // exclude images taken with mobile cameras and screenshots from android
                  and not any(.scan.exiftool.fields,
                              .key == "Model"
                              or .key == "Software" and strings.starts_with(.value, "Android")
                  )
                  and any(ml.nlu_classifier(.scan.ocr.raw).intents,
                          .name == "callback_scam" and .confidence == "high"
                  )
          )
      )
      or (
        length(attachments) == 0
        and any(file.explode(beta.message_screenshot()), .scan.qr.type is not null)
      )
    )
    and (
      any(recipients.to, strings.icontains(sender.display_name, .email.domain.sld))
      or length(body.current_thread.text) is null
      or body.current_thread.text == ""
      or regex.contains(subject.subject,
                        "(Authenticat(e|or|ion)|2fa|Multi.Factor|(qr|bar).code|action.require|alert|Att(n|ention):)"
      )
      or (any(recipients.to, strings.icontains(subject.subject, .display_name)))
      or (
        (length(recipients.to) == 0 or all(recipients.to, .display_name == "Undisclosed recipients"))
        and length(recipients.cc) == 0
        and length(recipients.bcc) == 0
      )
      or any(file.explode(beta.message_screenshot()), (.scan.qr.url.domain.tld in $suspicious_tlds))
      or any(attachments,
             .file_type in $file_types_images
             and any(file.explode(.), .scan.qr.url.domain.tld in $suspicious_tlds)
      )
      or sender.email.domain.tld in $suspicious_tlds
    )
  )
  
  // sender profile is new or outlier
  and (
    profile.by_sender().prevalence in ("new", "outlier")
    or (
      profile.by_sender().any_messages_malicious_or_spam
      and not profile.by_sender().any_false_positives
    )
  )
  
  // negate highly trusted sender domains unless they fail DMARC authentication
  and (
    (
      sender.email.domain.root_domain in $high_trust_sender_root_domains
      and (
        any(distinct(headers.hops, .authentication_results.dmarc is not null),
            strings.ilike(.authentication_results.dmarc, "*fail")
        )
      )
    )
    or sender.email.domain.root_domain not in $high_trust_sender_root_domains
  )
attack_types:
  - "Callback Phishing"
tactics_and_techniques:
  - "Out of band pivot"
  - "Social engineering"
detection_methods:
  - "Content analysis"
  - "File analysis"
  - "Optical Character Recognition"
  - "Natural Language Understanding"
  - "Sender analysis"
id: "b93c6f94-c9a3-587a-8eb5-6856754f8222"
