name: "Brand Impersonation: DocuSign attached image lure with no DocuSign links"
description: "Detects messages impersonating DocuSign utilizing image lures with Brand Logos or Brand Language, containing suspicious links that do not lead to DocuSign."
type: "rule"
severity: "medium"
source: |
  type.inbound
  and length(filter(attachments, .file_type not in $file_types_images)) == 0
  and length(body.current_thread.text) < 1000
  and (
    // image attachment impersonating docusign
    any(attachments,
        (
          any(ml.logo_detect(.).brands,
              .name == "DocuSign" and .confidence in ("medium", "high")
          )
          or any(file.explode(.),
                 strings.ilike(.scan.ocr.raw, "*DocuSign*")
                 and any(ml.nlu_classifier(.scan.ocr.raw).intents,
                         .name == "cred_theft" and .confidence != "low"
                 )
          )
        )
        and (
          any(body.links,
              (
                // hyperlinked image not to docusign
                .display_text is null
                and .display_url.url is null
                and not strings.ilike(.href_url.domain.root_domain, "docusign.*")
              )
              or (
                // hyperlinked disclaimer not to docusign
                any(ml.nlu_classifier(.display_text).entities,
                    .name == "disclaimer"
                )
                and not strings.ilike(.href_url.domain.root_domain, "docusign.*")
              )
              or (
                length(filter(body.links,
                              strings.ilike(.href_url.domain.root_domain,
                                            "docusign.*"
                              )
  
                              // and not the only link is to support.docusign.com
                              and not strings.ilike(.href_url.url,
                                                    "https://support.docusign.com/"
                              )
                              // and not the only link is directly to docusign.com with no path
                              and not strings.ilike(.href_url.url, "docusign.com")
                       )
                ) == 0
              )
              or (
                strings.contains(.display_text, "DOCUMENT")
                and not strings.ilike(.href_url.domain.root_domain, "docusign.*")
              )
          )
        )
    )
  )
  and (
    not profile.by_sender().solicited
    or (
      profile.by_sender().any_messages_malicious_or_spam
      and not profile.by_sender().any_false_positives
    )
  )
  and not profile.by_sender().any_false_positives
  
  // negate docusign 'via' messages
  and not (
    any(headers.hops,
        any(.fields,
            .name == "X-Api-Host" and strings.ends_with(.value, "docusign.net")
        )
    )
    and strings.contains(sender.display_name, "via")
  )
  
  // negate docusign originated emails
  and not any(headers.hops,
              regex.imatch(.received.server.raw, ".+.docusign.(net|com)")
  )
  // negate legit replies
  and not (
    length(headers.references) > 0
    or any(headers.hops, any(.fields, strings.ilike(.name, "In-Reply-To")))
  )
  and not profile.by_sender().any_false_positives
  
  // negate docusign X-Return-Path
  and not any(headers.hops,
              .index == 0
              and any(.fields,
                      .name == "X-Return-Path"
                      and strings.ends_with(.value, "docusign.net")
              )
  )
  
attack_types:
  - "Credential Phishing"
tactics_and_techniques:
  - "Impersonation: Brand"
  - "Social engineering"
detection_methods:
  - "Computer Vision"
  - "Content analysis"
  - "Header analysis"
  - "Natural Language Understanding"
  - "Optical Character Recognition"
  - "Sender analysis"
id: "eb7c2932-02e7-5901-8c08-6733295c1a7b"
