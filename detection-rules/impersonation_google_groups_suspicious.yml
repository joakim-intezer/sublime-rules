name: "VIP Impersonation via Google Group relay with suspicious indicators"
description: "Public Google Groups can be used to impersonate internal senders, while the reply to address is not under organizational control, leading to fraud, credential phishing, or other unwanted outcomes."
type: "rule"
severity: "high"
source: "(type.inbound or type.internal)\nand sender.email.domain.root_domain in $org_domains\n\n// subject, sender or reply to contains a VIP\nand (\n  any(headers.reply_to,\n      any($org_vips, strings.contains(.display_name, ..display_name))\n  )\n  or any($org_vips, strings.contains(subject.subject, .display_name))\n  or any($org_vips, strings.contains(sender.display_name, .display_name))\n)\nand any(headers.hops,\n        any(.fields,\n            regex.icontains(.name,\n                            \"X-Authenticated-Sender|X-Sender|X-Original-Sender\"\n            )\n        )\n)\n\n// reply to return path mismatch and not org domain\nand any(headers.reply_to,\n        .email.domain.root_domain != headers.return_path.domain.root_domain\n        and .email.domain.root_domain not in $org_domains\n)\n\n// googlegroups found in hops\nand any(headers.hops,\n        .index == 0 and any(.fields, strings.icontains(.value, \"googlegroups\"))\n)\n\n// financial nlu entity in current thread\nand 3 of (\n  any(ml.nlu_classifier(body.current_thread.text).entities,\n      .name == \"financial\"\n  ),\n\n  // invoice entity in display_text\n  any(ml.nlu_classifier(body.html.display_text).tags, .name == \"invoice\"),\n\n  // fake thread\n  (\n    regex.imatch(subject.subject, \"(re|fw(d)?):.*\")\n    and (\n      (length(headers.references) == 0 and headers.in_reply_to is null)\n      or not any(headers.hops,\n                 any(.fields, strings.ilike(.name, \"In-Reply-To\"))\n      )\n    )\n  ),\n\n  // reply-to is freemail \n  any(headers.reply_to, .email.domain.domain in $free_email_providers),\n\n  // reply-to is not in $recipient_emails\n  any(headers.reply_to, .email.email not in $recipient_emails),\n\n  // dmarc authentication is freemail provider\n  any(distinct(headers.hops, .authentication_results.dmarc is not null),\n      .authentication_results.dmarc_details.from.domain in $free_email_providers\n  )\n)\n"
attack_types:
  - "BEC/Fraud"
  - "Credential Phishing"
  - "Malware/Ransomware"
tactics_and_techniques:
  - "Evasion"
  - "Free email provider"
  - "Impersonation: Employee"
  - "Social engineering"
  - "Spoofing"
detection_methods:
  - "Content analysis"
  - "Header analysis"
  - "Natural Language Understanding"
  - "Sender analysis"
id: "57f9cd3b-ddac-5ef5-96dd-374dbd03f5cd"
testing_pr: 1213
testing_sha: 3b895af0eb537faa4f6f0a7550339d70858d558a
