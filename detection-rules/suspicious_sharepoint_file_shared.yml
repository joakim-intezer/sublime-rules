name: "Suspicious SharePoint File Sharing"
description: "This rule detect potential credential phishing leveraging SharePoint file sharing to deliver a PDF or OneNote file using indicators such as suspicious sender analysis and link characteristics."
type: "rule"
severity: "medium"
source: "type.inbound\n\n// Matches the message id observed. DKIM/SPF domains can be custom and therefore are unpredictable.\nand strings.starts_with(headers.message_id, '<Share-')\nand strings.ends_with(headers.message_id, '@odspnotify>')\n\n// SharePoint email indicators\nand strings.like(body.current_thread.text,\n                 \"*shared a file with you*\",\n                 \"*shared with you*\",\n                 \"*invited you to access a file*\"\n)\nand strings.icontains(subject.subject, \"shared\")\n\n// sender analysis \nand (\n  (\n    // if the sender is not the sharepointonline.com, we can use the sender email\n    // to see if it is a solicited email\n    sender.email.domain.domain != \"sharepointonline.com\"\n    and not profile.by_sender().solicited\n  )\n  // if it is the sharepointonline sender, use the reply-to header\n  or (\n    sender.email.domain.domain =~ \"sharepointonline.com\"\n    and length(headers.reply_to) > 0\n    and \n    // a newly created domain\n    (\n      all(headers.reply_to,\n          .email.domain.root_domain not in $free_email_providers\n          and network.whois(.email.domain).days_old <= 30\n          and .email.email != sender.email.email\n      )\n\n      // is a free email provider\n      or all(headers.reply_to,\n             .email.domain.root_domain in $free_email_providers\n      )\n\n      // no outbound emails \n      or all(headers.reply_to, .email.email not in $recipient_emails)\n    )\n  )\n)\n// link logic\nand any(body.links,\n        .href_url.domain.root_domain == \"sharepoint.com\"\n        // it is a personal share\n        and (\n          // /g/ is only found with /personal\n          strings.icontains(.href_url.path, '/g/personal/')\n          or strings.icontains(.href_url.path, '/p/')\n        )\n        // it is either a OneNote or PDF\n        and (\n          strings.icontains(.href_url.path, '/:o:/')\n          or strings.icontains(.href_url.path, '/:b:/')\n        )\n)\n"
attack_types:
  - "Credential Phishing"
tactics_and_techniques:
  - "Free file host"
  - "OneNote"
  - "PDF"
detection_methods:
  - "Sender analysis"
  - "URL analysis"
  - "Content analysis"
id: "971c3d9c-1605-5307-85e3-c017c6b72abb"
testing_pr: 1733
testing_sha: d831f1654a72434d04f29f5f1e080f8aa71237b6
